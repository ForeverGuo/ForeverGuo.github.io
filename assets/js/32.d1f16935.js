(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{611:function(v,_,t){"use strict";t.r(_);var l=t(7),i=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h3",{attrs:{id:"tcp-transmission-control-protocol-传输控制协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-transmission-control-protocol-传输控制协议"}},[v._v("#")]),v._v(" TCP（Transmission Control Protocol，传输控制协议）")]),v._v(" "),t("p",[v._v("TCP是一种面向连接（连接导向）的，可靠的基于字节流的传输层通信协议。TCP将用户数据打包成报文段\n它发送后启动一个定时器，另一端收到的数据进行确认，对失序的数据重新排序，丢弃重复数据。")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("特点：")]),v._v(" "),t("ul",[t("li",[v._v("TCP是面向连接的传输层协议")]),v._v(" "),t("li",[v._v("每一条TCP连接只能有两个端点，每一条TCP连接只能是点对点的")]),v._v(" "),t("li",[v._v("TCP提供可靠交付的服务")]),v._v(" "),t("li",[v._v("TCP提供全双工通信。数据在两个方向上独立的进行传输。因此，连接的每一端必须保持每个方向上\n的传输数据序号")]),v._v(" "),t("li",[v._v("面向字节流。")])])]),v._v(" "),t("li",[t("p",[v._v("标志位信息")]),v._v(" "),t("ul",[t("li",[v._v("CWR：压缩")]),v._v(" "),t("li",[v._v("ECE：拥塞")]),v._v(" "),t("li",[v._v("URG：紧急。当urg=1 表示报文段中有紧急数据，应尽快传送")]),v._v(" "),t("li",[v._v("ACK：确认。当ack=1 代表这是一个确认的tcp包，取0则不是确认包")]),v._v(" "),t("li",[v._v("PSH：推送。当发送端psh=1时 接收端尽快的交付给应用进程")]),v._v(" "),t("li",[v._v("RST：复位。当rst=1 表明tcp连接中出现严重差错，必须释放连接，再重新建立连接")]),v._v(" "),t("li",[v._v("SYN：同步。在建立连接是用来同步序号，SYN=1， ACK=0表示一个连接请求报文段。\nSYN=1，ACK=1 表示同意建立连接")]),v._v(" "),t("li",[v._v("FIN：终止。当FIN=1时，表明此报文段的发送端的数据已经发送完毕，并要求释放传输连接")]),v._v(" "),t("li",[v._v("窗口：用来控制对方发送的数据量，通知发放已确定的发送窗口上限")]),v._v(" "),t("li",[v._v("校验和：该字段校验的范围包括头部和数据这两部分。由发端计算和存储，并由收端进行验证")]),v._v(" "),t("li",[v._v("紧急指针：紧急指针在URG=1时才有效，它指出本报文段中的紧急数据的字节数")]),v._v(" "),t("li",[v._v("TCP选项：长度可变，最长可达40字节")])])])]),v._v(" "),t("h3",{attrs:{id:"建立连接需要三次握手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建立连接需要三次握手"}},[v._v("#")]),v._v(" 建立连接需要三次握手")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://images2015.cnblogs.com/blog/731719/201605/731719-20160520221749123-906809436.png",alt:"image"}})]),v._v(" "),t("p",[v._v("Seq: 是发送方当前报文的顺序号码\nack: 是发送方期望对方在下次返回报文中给回的Seq")]),v._v(" "),t("ul",[t("li",[v._v("第一次握手：\n客户端向服务端发送连接请求包，标志位SYN（同步序号）\n重置为1，顺序号码为X=0")]),v._v(" "),t("li",[v._v("第二次握手：\n服务端收到客户端发过来报文，由SYN=1知道客户端要求建立联机，则为\n这次连接分配资源。并向客户端发送一个SYN和ACK都重置为1的TCP报文\n设置初始顺序号码Y=0，将确认序号ack设置为上一次客户端发送过来的\n顺序号Seq加1，即X+1 = 0+1 = 1")]),v._v(" "),t("li",[v._v("第三次握手\n客户端收到服务端发来的包检查确认号码ack是否正确，即第一次发送的Seq\n加1，以及标志位ACK是否为1，若正确，服务端再次发送确认包，ACK标志位为1，SYN标志位为0，确认号码（ack）=Y+1=1，发送顺序号码Seq为X+1=1， server收到确认号码值与ACK=1则连接建立成功，可以传送数据了")])])])}),[],!1,null,null,null);_.default=i.exports}}]);