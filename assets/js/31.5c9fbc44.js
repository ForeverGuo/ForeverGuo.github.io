(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{609:function(t,r,e){"use strict";e.r(r);var v=e(7),_=Object(v.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"什么是dns解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是dns解析"}},[t._v("#")]),t._v(" 什么是DNS解析")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("DNS解析实际上就是寻找你所需要的资源的过程，DNS服务是和HTTP协议一样位于应用层的协议，提供\n域名到IP地址之间的解析服务.\n")])])]),e("h3",{attrs:{id:"dns-解析优化【目的-为了更快的访问到想要的资源】"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns-解析优化【目的-为了更快的访问到想要的资源】"}},[t._v("#")]),t._v(" DNS 解析优化【目的：为了更快的访问到想要的资源】")]),t._v(" "),e("ul",[e("li",[t._v("浏览器缓存")]),t._v(" "),e("li",[t._v("系统缓存")]),t._v(" "),e("li",[t._v("dns 缓存")]),t._v(" "),e("li",[t._v("本地DNS服务器查询 - 根域名服务器 - 顶级域名服务器 - 主域名服务器 【迭代查询】")]),t._v(" "),e("li",[t._v("返回该域名的解析服务器地址")])]),t._v(" "),e("h3",{attrs:{id:"dns-查询方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns-查询方式"}},[t._v("#")]),t._v(" DNS 查询方式")]),t._v(" "),e("ul",[e("li",[t._v("递归查询(Recursive query)"),e("br"),t._v("\n递归查询是这么一种查询方式，一般发生在client请求DNS Server。Client 发出一个域名解析的请求，DNS Server 必须返回对应的IP地址，或者返回找不到的错误。")]),t._v(" "),e("li",[t._v("迭代查询(Iterative query)"),e("br"),t._v("\n迭代查询一般发生DNS Server之间，当client发出域名解析的请求后，DNS Server 需要给予最佳答案，这个最佳答案可能是 ‘距离最近’的顶级域名服务器，也能是权威域名服务器。无论如何，client需要对返回结果再次发起请求，直到获得最终结果。")]),t._v(" "),e("li",[t._v("非递归查询(Non-recursive query)"),e("br"),t._v("\n非递归查询发生在client和DNS Server之间，指的是，请求的DNS Server已经知道答案，直接返回。这里可能有两种情况，一种是DNS Server本地缓存了对应的IP， 或者是缓存了对应的域名的权威服务器。第二种情况只需要再发一次请求，即可拿到结果返回。")]),t._v(" "),e("li",[e("font",{attrs:{color:"#e93011"}},[t._v("小结")]),e("br"),t._v("\nclient 到 ISP 之间的 DNS查询请求都是递归查询请求，而 ISP 从根域名服务器开始的查询都是迭代查询。这样的查询方式的设计是为了保证性能，因为递归查询对服务器的压力要远大于迭代查询。")],1)]),t._v(" "),e("h3",{attrs:{id:"😊😊😊"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#😊😊😊"}},[t._v("#")]),t._v(" "),e("font",{attrs:{color:"#e93011"}},[t._v("😊😊😊")])],1),t._v(" "),e("ul",[e("li",[t._v("URI：统一资源标识符，互联网资源标识符")]),t._v(" "),e("li",[t._v("URL：统一资源定位符")]),t._v(" "),e("li",[t._v("URN：统一资源名称 是 统一资源标识的历史名字")])]),t._v(" "),e("h3",{attrs:{id:"url-组成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#url-组成"}},[t._v("#")]),t._v(" URL 组成")]),t._v(" "),e("ul",[e("li",[t._v("protocol 😕/ hostname / path ? query # fragment")]),t._v(" "),e("li",[t._v("protocol 协议， 常用的协议是http/https")]),t._v(" "),e("li",[t._v("hostname 主机地址， 可以是域名，也可以是IP地址")]),t._v(" "),e("li",[t._v("port 端口 http 协议默认端口是：80端口 https默认端口： 443")]),t._v(" "),e("li",[t._v("path 路径 网络资源在服务器中指定路径")]),t._v(" "),e("li",[t._v("parameter 参数 如果要向服务器输入参数，在这部分输入")]),t._v(" "),e("li",[t._v("hash 用于为页面上的标题提供快速链接，如锚点链接")]),t._v(" "),e("li",[t._v("query 查询字符串 如果需要从服务器那里查询内容，在这里编辑")])])])}),[],!1,null,null,null);r.default=_.exports}}]);