(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{606:function(t,e,a){"use strict";a.r(e);var s=a(7),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"xmlhttprequest的跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest的跨域"}},[t._v("#")]),t._v(" XMLHttpRequest的跨域")]),t._v(" "),a("ol",[a("li",[t._v("JSONP")]),t._v(" "),a("li",[t._v("CORS")]),t._v(" "),a("li",[t._v("WebSocket")]),t._v(" "),a("li",[t._v("代理")])]),t._v(" "),a("h3",{attrs:{id:"cookie的跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie的跨域"}},[t._v("#")]),t._v(" Cookie的跨域")]),t._v(" "),a("p",[t._v("同源的页面才可以共享cookie，但是如果两个源的一级域名相同，二级域名不同，浏览器可以通过设置document.domain来共享cookie。")]),t._v(" "),a("h3",{attrs:{id:"跨窗口的跨域通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨窗口的跨域通信"}},[t._v("#")]),t._v(" 跨窗口的跨域通信")]),t._v(" "),a("p",[t._v("frame窗口和window.open打开的窗口若与父窗口不是同源的，都无法与创建它们的父窗口通信，无法互相访问对方的document对象。如果两个窗口一级域名相同，二级域名不同，可以通过设置document.domain解决。"),a("br")]),t._v(" "),a("ol",[a("li",[t._v("片段识别符即hashChange事件 "),a("br"),t._v("\n地址栏中url的#后面的内容变化是不会引起页面的刷新的，这部分内容就是片段识别符，当片段识别符内容变化时，会触发hashchange事件。"),a("br")]),t._v(" "),a("li",[t._v("window.name "),a("br"),t._v("\nwindow.name值在不同的页面（甚至不同域名）加载后依旧存在，并且值最大可以达到2MB。"),a("br")]),t._v(" "),a("li",[t._v("window.postMessage "),a("br"),t._v("\nwindow.postMessage是HTML5引入的一个新的api，允许两个窗口通信，不论是否两个窗口是否同源。")])]),t._v(" "),a("h3",{attrs:{id:"跨源数据存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨源数据存储"}},[t._v("#")]),t._v(" 跨源数据存储")]),t._v(" "),a("p",[t._v("通过window.postMessage，能够实现读写其他窗口的localStorage和IndexDB。"),a("br"),t._v("\n在用window.postMessage实现窗口间的通信的基础上进行 : "),a("br")]),t._v(" "),a("ul",[a("li",[t._v("写：接收其他窗口的消息时，将消息作为值其存入 "),a("br")]),t._v(" "),a("li",[t._v("读：接受其他窗口的消息时，将消息作为键值取出值，并将值通过postMessage发送给其他窗口")])])])}),[],!1,null,null,null);e.default=o.exports}}]);